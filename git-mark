#!/bin/sh

mark=$(git config --get --default WIP mark.default)

die() {
	echo "ERROR: $*" >&2
	exit 1
}

case $0 in
	(*unmark)
		mode=unmark
		;;

	(*)
		mode=mark
		;;
esac

OPTS_SPEC="\
${0##*/} [<options>] [<ref> [...]]

Mark or unmark the subject line of the named commits
(or HEAD if unspecified).
--
h,help		Show the help

m,mark		Add the mark
u,unmark	Remove the mark
M,set-mark=MARK	Set the mark to MARK
"

eval "$(git rev-parse --parseopt -- "$@" <<<$OPTS_SPEC || echo exit $?)"

while (( $# > 0 )); do
	case $1 in
		(-u)	mode=unmark
			shift
			;;

		(-m)	mode=mark
			shift
			;;

		(-M)	mark=$2
			shift 2
			;;

		(--)	shift
			break
			;;
	esac
done


tmpdir=$(mktemp -d commitXXXXXX)
trap "rm -rf $tmpdir" EXIT

for refspec in "${@:-HEAD}"; do
	rev=$(git rev-parse --verify -q ${refspec})
	[[ $rev ]] || die "invalid refspec: $refspec"

	git show -q --format='%B' $rev  | tee $tmpdir/modified > $tmpdir/orig
	if [[ $mode == mark ]]; then
		if ! sed -n 1p $tmpdir/orig | grep -q '\['"$mark"']'; then
			sed '1 s/^/['"$mark"'] /' $tmpdir/orig > $tmpdir/modified
		fi
	else
		sed '1 s/^\['"$mark"'] //' $tmpdir/orig > $tmpdir/modified
	fi

	if ! diff $tmpdir/orig $tmpdir/modified > /dev/null; then
		echo "modifying commit $refspec (${rev:0:10})"
		git revise -F $tmpdir/modified $rev > $tmpdir/out 2> $tmpdir/err ||
			die "failed to modify mark: $(cat $tmpdir/err)"
		git show -q $(head -1 $tmpdir/out | cut -f1 -d' ')
	fi
done
