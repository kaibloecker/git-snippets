#!/bin/bash

usage() {
cat <<EOF
$0: usage: $0 [-f] [-F] [-r <remote>] <rev>
EOF
}

force=
remote=$(git config --get --default origin ptt.remote)
query_only=0
shortlen=10
marker=x-branch

while getopts qfr: ch; do
	case $ch in
	(f)	force="--force-with-lease"
		;;
	(F)	force="--force"
		;;
	(r)	remote="$OPTARG"
		;;

	(q)	query_only=1
		;;

	(\?)	usage >&2
		exit 2
		;;
	esac
done
shift $(( OPTIND - 1 ))

(( $# == 1 )) || { usage >&2; exit 2; }

set -eu

for rev in $(git rev-list "$@" | tac ); do
	target=($(git show $rev -q --format="%(trailers:key=${marker},valueonly=true)"))

	if (( ${#target[*]} > 1 )); then
		echo "ERROR: multiple ${marker} directives in $rev." >&2
		exit 1
	elif (( ${#target[*]} == 0 )); then
		continue
	fi

	target_rev=$(git rev-parse --verify -q ${remote}/${target} || echo none)

	if [[ $target_rev == $rev ]]; then
		target_rev_color=green
	else
		target_rev_color=red
	fi
	target_rev_fmt="%C${target_rev_color}${target_rev:0:$shortlen}%Creset"
	rev_fmt="${rev:0:$shortlen}"

	git show -q --format="* %s%n  ${rev_fmt} -> ${target_rev_fmt} %Cblue${remote}/${target}%Creset" $rev
	(( $query_only )) && continue
	git push ${force} ${remote} ${rev}:refs/heads/${target}
done
